version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: smart-mail-relay-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: smart_mail_relay
      MYSQL_USER: smart_mail_relay
      MYSQL_PASSWORD: password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Smart Mail Relay Application
  app:
    build: .
    container_name: smart-mail-relay-app
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      # Database configuration
      DB_HOST: mysql
      DB_PORT: 3306
      DB_USER: smart_mail_relay
      DB_PASSWORD: password
      DB_NAME: smart_mail_relay
      
      # Gmail OAuth2 configuration (set these in production)
      GMAIL_CLIENT_ID: ${GMAIL_CLIENT_ID:-}
      GMAIL_CLIENT_SECRET: ${GMAIL_CLIENT_SECRET:-}
      GMAIL_REFRESH_TOKEN: ${GMAIL_REFRESH_TOKEN:-}
      GMAIL_USER_EMAIL: ${GMAIL_USER_EMAIL:-}
      
      # IMAP configuration (alternative to OAuth2)
      GMAIL_USE_IMAP: ${GMAIL_USE_IMAP:-false}
      GMAIL_IMAP_HOST: ${GMAIL_IMAP_HOST:-imap.gmail.com}
      GMAIL_IMAP_PORT: ${GMAIL_IMAP_PORT:-993}
      GMAIL_IMAP_USER: ${GMAIL_IMAP_USER:-}
      GMAIL_IMAP_PASSWORD: ${GMAIL_IMAP_PASSWORD:-}
      
      # Scheduler configuration
      SCHEDULER_INTERVAL_MINUTES: ${SCHEDULER_INTERVAL_MINUTES:-5}
      SCHEDULER_MAX_RETRIES: ${SCHEDULER_MAX_RETRIES:-3}
      
      # Server configuration
      SERVER_PORT: ${SERVER_PORT:-8080}
    depends_on:
      mysql:
        condition: service_healthy
    volumes:
      - ./config.yaml:/app/config/config.yaml:ro
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Prometheus (optional - for metrics collection)
  prometheus:
    image: prom/prometheus:latest
    container_name: smart-mail-relay-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    depends_on:
      - app

  # Grafana (optional - for metrics visualization)
  grafana:
    image: grafana/grafana:latest
    container_name: smart-mail-relay-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./grafana/datasources:/etc/grafana/provisioning/datasources:ro
    depends_on:
      - prometheus

volumes:
  mysql_data:
  prometheus_data:
  grafana_data: 